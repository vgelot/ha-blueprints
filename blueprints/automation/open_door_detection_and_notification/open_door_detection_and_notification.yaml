blueprint:
  name: Open door detection & notification for all open door sensors
  description: Regularly test all door sensors and if so execute an action.
  domain: automation
  input:
    time:
      name: Time to test on
      description: Test is run at configured time
      default: '22:00:00'
      selector:
        time: {}
    days:
      name: (Required) Days
      description: Days of the week when the automation is active.
      selector:
        select:
          options:
          - Monday
          - Tuesday
          - Wednesday
          - Thursday
          - Friday
          - Saturday
          - Sunday
          mode: list
          multiple: true
          custom_value: false
          sort: false
    exclude:
      name: Excluded Sensors
      description: Open door sensors (e.g. bedroom) to exclude from detection. Only entities are supported, devices must be expanded!
      default: {entity_id: []}
      selector:
        target:
          entity:
            device_class: door
    actions:
      name: Actions
      description: Notifications or similar to be run. {{sensors}} is replaced with the names of sensors being open.
      selector:
        action: {}
  source_url: https://github.com/vgelot/ha-blueprints/blob/main/blueprints/automation/open_door_detection_and_notification/open_door_detection_and_notification.yaml

variables:
  days: !input days
  exclude: !input 'exclude'
  sensors: >
    {% set result = namespace(sensors=[]) %}
    {% for state in states.sensor | selectattr('attributes.device_class', '==', 'door') %}
      {% if state.state == 'on' and not state.entity_id in exclude.entity_id %}
        {% set result.sensors = result.sensors + [state.name] %}
      {% endif %}
    {% endfor %}
    {% for state in states.binary_sensor | selectattr('attributes.device_class', '==', 'door') %}
      {% if state.state == 'on' and not state.entity_id in exclude.entity_id %}
        {% set result.sensors = result.sensors + [state.name] %}
      {% endif %}
    {% endfor %}
    {{ result.sensors | join(', ') }}

trigger:
- platform: time
  at: !input 'time'

condition:
- condition: template
  value_template: '{{ sensors != '''' and now().strftime(''%A'') in days }}'

action:
- choose: []
  default: !input 'actions'

mode: single
